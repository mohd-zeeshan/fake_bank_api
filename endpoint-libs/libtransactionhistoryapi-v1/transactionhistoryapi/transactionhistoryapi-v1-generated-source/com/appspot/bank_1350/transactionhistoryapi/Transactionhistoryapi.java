/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-05-27 16:00:31 UTC)
 * on 2016-06-29 at 07:26:45 UTC 
 * Modify at your own risk.
 */

package com.appspot.bank_1350.transactionhistoryapi;

/**
 * Service definition for Transactionhistoryapi (v1).
 *
 * <p>
 * An API to manage Transactions
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link TransactionhistoryapiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Transactionhistoryapi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.21.0 of the transactionhistoryapi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://bank-1350.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "transactionhistoryapi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Transactionhistoryapi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Transactionhistoryapi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getTransactionHistory".
   *
   * This request holds the parameters needed by the transactionhistoryapi server.  After setting any
   * optional parameters, call the {@link GetTransactionHistory#execute()} method to invoke the remote
   * operation.
   *
   * @param transactionId
   * @return the request
   */
  public GetTransactionHistory getTransactionHistory(java.lang.Long transactionId) throws java.io.IOException {
    GetTransactionHistory result = new GetTransactionHistory(transactionId);
    initialize(result);
    return result;
  }

  public class GetTransactionHistory extends TransactionhistoryapiRequest<com.appspot.bank_1350.transactionhistoryapi.model.TransactionHistory> {

    private static final String REST_PATH = "transactionhistory/{transactionId}";

    /**
     * Create a request for the method "getTransactionHistory".
     *
     * This request holds the parameters needed by the the transactionhistoryapi server.  After
     * setting any optional parameters, call the {@link GetTransactionHistory#execute()} method to
     * invoke the remote operation. <p> {@link GetTransactionHistory#initialize(com.google.api.client.
     * googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param transactionId
     * @since 1.13
     */
    protected GetTransactionHistory(java.lang.Long transactionId) {
      super(Transactionhistoryapi.this, "GET", REST_PATH, null, com.appspot.bank_1350.transactionhistoryapi.model.TransactionHistory.class);
      this.transactionId = com.google.api.client.util.Preconditions.checkNotNull(transactionId, "Required parameter transactionId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetTransactionHistory setAlt(java.lang.String alt) {
      return (GetTransactionHistory) super.setAlt(alt);
    }

    @Override
    public GetTransactionHistory setFields(java.lang.String fields) {
      return (GetTransactionHistory) super.setFields(fields);
    }

    @Override
    public GetTransactionHistory setKey(java.lang.String key) {
      return (GetTransactionHistory) super.setKey(key);
    }

    @Override
    public GetTransactionHistory setOauthToken(java.lang.String oauthToken) {
      return (GetTransactionHistory) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTransactionHistory setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTransactionHistory) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTransactionHistory setQuotaUser(java.lang.String quotaUser) {
      return (GetTransactionHistory) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTransactionHistory setUserIp(java.lang.String userIp) {
      return (GetTransactionHistory) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long transactionId;

    /**

     */
    public java.lang.Long getTransactionId() {
      return transactionId;
    }

    public GetTransactionHistory setTransactionId(java.lang.Long transactionId) {
      this.transactionId = transactionId;
      return this;
    }

    @Override
    public GetTransactionHistory set(String parameterName, Object value) {
      return (GetTransactionHistory) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertTransactionHistory".
   *
   * This request holds the parameters needed by the transactionhistoryapi server.  After setting any
   * optional parameters, call the {@link InsertTransactionHistory#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.appspot.bank_1350.transactionhistoryapi.model.TransactionHistory}
   * @return the request
   */
  public InsertTransactionHistory insertTransactionHistory(com.appspot.bank_1350.transactionhistoryapi.model.TransactionHistory content) throws java.io.IOException {
    InsertTransactionHistory result = new InsertTransactionHistory(content);
    initialize(result);
    return result;
  }

  public class InsertTransactionHistory extends TransactionhistoryapiRequest<com.appspot.bank_1350.transactionhistoryapi.model.TransactionHistory> {

    private static final String REST_PATH = "transactionhistory";

    /**
     * Create a request for the method "insertTransactionHistory".
     *
     * This request holds the parameters needed by the the transactionhistoryapi server.  After
     * setting any optional parameters, call the {@link InsertTransactionHistory#execute()} method to
     * invoke the remote operation. <p> {@link InsertTransactionHistory#initialize(com.google.api.clie
     * nt.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.bank_1350.transactionhistoryapi.model.TransactionHistory}
     * @since 1.13
     */
    protected InsertTransactionHistory(com.appspot.bank_1350.transactionhistoryapi.model.TransactionHistory content) {
      super(Transactionhistoryapi.this, "POST", REST_PATH, content, com.appspot.bank_1350.transactionhistoryapi.model.TransactionHistory.class);
    }

    @Override
    public InsertTransactionHistory setAlt(java.lang.String alt) {
      return (InsertTransactionHistory) super.setAlt(alt);
    }

    @Override
    public InsertTransactionHistory setFields(java.lang.String fields) {
      return (InsertTransactionHistory) super.setFields(fields);
    }

    @Override
    public InsertTransactionHistory setKey(java.lang.String key) {
      return (InsertTransactionHistory) super.setKey(key);
    }

    @Override
    public InsertTransactionHistory setOauthToken(java.lang.String oauthToken) {
      return (InsertTransactionHistory) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertTransactionHistory setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertTransactionHistory) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertTransactionHistory setQuotaUser(java.lang.String quotaUser) {
      return (InsertTransactionHistory) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertTransactionHistory setUserIp(java.lang.String userIp) {
      return (InsertTransactionHistory) super.setUserIp(userIp);
    }

    @Override
    public InsertTransactionHistory set(String parameterName, Object value) {
      return (InsertTransactionHistory) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listTransactionHistory".
   *
   * This request holds the parameters needed by the transactionhistoryapi server.  After setting any
   * optional parameters, call the {@link ListTransactionHistory#execute()} method to invoke the
   * remote operation.
   *
   * @return the request
   */
  public ListTransactionHistory listTransactionHistory() throws java.io.IOException {
    ListTransactionHistory result = new ListTransactionHistory();
    initialize(result);
    return result;
  }

  public class ListTransactionHistory extends TransactionhistoryapiRequest<com.appspot.bank_1350.transactionhistoryapi.model.CollectionResponseTransactionHistory> {

    private static final String REST_PATH = "transactionhistory";

    /**
     * Create a request for the method "listTransactionHistory".
     *
     * This request holds the parameters needed by the the transactionhistoryapi server.  After
     * setting any optional parameters, call the {@link ListTransactionHistory#execute()} method to
     * invoke the remote operation. <p> {@link ListTransactionHistory#initialize(com.google.api.client
     * .googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListTransactionHistory() {
      super(Transactionhistoryapi.this, "GET", REST_PATH, null, com.appspot.bank_1350.transactionhistoryapi.model.CollectionResponseTransactionHistory.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListTransactionHistory setAlt(java.lang.String alt) {
      return (ListTransactionHistory) super.setAlt(alt);
    }

    @Override
    public ListTransactionHistory setFields(java.lang.String fields) {
      return (ListTransactionHistory) super.setFields(fields);
    }

    @Override
    public ListTransactionHistory setKey(java.lang.String key) {
      return (ListTransactionHistory) super.setKey(key);
    }

    @Override
    public ListTransactionHistory setOauthToken(java.lang.String oauthToken) {
      return (ListTransactionHistory) super.setOauthToken(oauthToken);
    }

    @Override
    public ListTransactionHistory setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListTransactionHistory) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListTransactionHistory setQuotaUser(java.lang.String quotaUser) {
      return (ListTransactionHistory) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListTransactionHistory setUserIp(java.lang.String userIp) {
      return (ListTransactionHistory) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListTransactionHistory setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListTransactionHistory setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListTransactionHistory set(String parameterName, Object value) {
      return (ListTransactionHistory) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listTransactionHistoryByUserId".
   *
   * This request holds the parameters needed by the transactionhistoryapi server.  After setting any
   * optional parameters, call the {@link ListTransactionHistoryByUserId#execute()} method to invoke
   * the remote operation.
   *
   * @param userId
   * @return the request
   */
  public ListTransactionHistoryByUserId listTransactionHistoryByUserId(java.lang.Long userId) throws java.io.IOException {
    ListTransactionHistoryByUserId result = new ListTransactionHistoryByUserId(userId);
    initialize(result);
    return result;
  }

  public class ListTransactionHistoryByUserId extends TransactionhistoryapiRequest<com.appspot.bank_1350.transactionhistoryapi.model.CollectionResponseTransactionHistory> {

    private static final String REST_PATH = "collectionresponse_transactionhistory/{userId}";

    /**
     * Create a request for the method "listTransactionHistoryByUserId".
     *
     * This request holds the parameters needed by the the transactionhistoryapi server.  After
     * setting any optional parameters, call the {@link ListTransactionHistoryByUserId#execute()}
     * method to invoke the remote operation. <p> {@link ListTransactionHistoryByUserId#initialize(com
     * .google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to
     * initialize this instance immediately after invoking the constructor. </p>
     *
     * @param userId
     * @since 1.13
     */
    protected ListTransactionHistoryByUserId(java.lang.Long userId) {
      super(Transactionhistoryapi.this, "GET", REST_PATH, null, com.appspot.bank_1350.transactionhistoryapi.model.CollectionResponseTransactionHistory.class);
      this.userId = com.google.api.client.util.Preconditions.checkNotNull(userId, "Required parameter userId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListTransactionHistoryByUserId setAlt(java.lang.String alt) {
      return (ListTransactionHistoryByUserId) super.setAlt(alt);
    }

    @Override
    public ListTransactionHistoryByUserId setFields(java.lang.String fields) {
      return (ListTransactionHistoryByUserId) super.setFields(fields);
    }

    @Override
    public ListTransactionHistoryByUserId setKey(java.lang.String key) {
      return (ListTransactionHistoryByUserId) super.setKey(key);
    }

    @Override
    public ListTransactionHistoryByUserId setOauthToken(java.lang.String oauthToken) {
      return (ListTransactionHistoryByUserId) super.setOauthToken(oauthToken);
    }

    @Override
    public ListTransactionHistoryByUserId setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListTransactionHistoryByUserId) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListTransactionHistoryByUserId setQuotaUser(java.lang.String quotaUser) {
      return (ListTransactionHistoryByUserId) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListTransactionHistoryByUserId setUserIp(java.lang.String userIp) {
      return (ListTransactionHistoryByUserId) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long userId;

    /**

     */
    public java.lang.Long getUserId() {
      return userId;
    }

    public ListTransactionHistoryByUserId setUserId(java.lang.Long userId) {
      this.userId = userId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListTransactionHistoryByUserId setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListTransactionHistoryByUserId setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListTransactionHistoryByUserId set(String parameterName, Object value) {
      return (ListTransactionHistoryByUserId) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeTransactionHistory".
   *
   * This request holds the parameters needed by the transactionhistoryapi server.  After setting any
   * optional parameters, call the {@link RemoveTransactionHistory#execute()} method to invoke the
   * remote operation.
   *
   * @param transactionId
   * @return the request
   */
  public RemoveTransactionHistory removeTransactionHistory(java.lang.Long transactionId) throws java.io.IOException {
    RemoveTransactionHistory result = new RemoveTransactionHistory(transactionId);
    initialize(result);
    return result;
  }

  public class RemoveTransactionHistory extends TransactionhistoryapiRequest<Void> {

    private static final String REST_PATH = "transactionhistory/{transactionId}";

    /**
     * Create a request for the method "removeTransactionHistory".
     *
     * This request holds the parameters needed by the the transactionhistoryapi server.  After
     * setting any optional parameters, call the {@link RemoveTransactionHistory#execute()} method to
     * invoke the remote operation. <p> {@link RemoveTransactionHistory#initialize(com.google.api.clie
     * nt.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param transactionId
     * @since 1.13
     */
    protected RemoveTransactionHistory(java.lang.Long transactionId) {
      super(Transactionhistoryapi.this, "DELETE", REST_PATH, null, Void.class);
      this.transactionId = com.google.api.client.util.Preconditions.checkNotNull(transactionId, "Required parameter transactionId must be specified.");
    }

    @Override
    public RemoveTransactionHistory setAlt(java.lang.String alt) {
      return (RemoveTransactionHistory) super.setAlt(alt);
    }

    @Override
    public RemoveTransactionHistory setFields(java.lang.String fields) {
      return (RemoveTransactionHistory) super.setFields(fields);
    }

    @Override
    public RemoveTransactionHistory setKey(java.lang.String key) {
      return (RemoveTransactionHistory) super.setKey(key);
    }

    @Override
    public RemoveTransactionHistory setOauthToken(java.lang.String oauthToken) {
      return (RemoveTransactionHistory) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveTransactionHistory setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveTransactionHistory) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveTransactionHistory setQuotaUser(java.lang.String quotaUser) {
      return (RemoveTransactionHistory) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveTransactionHistory setUserIp(java.lang.String userIp) {
      return (RemoveTransactionHistory) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long transactionId;

    /**

     */
    public java.lang.Long getTransactionId() {
      return transactionId;
    }

    public RemoveTransactionHistory setTransactionId(java.lang.Long transactionId) {
      this.transactionId = transactionId;
      return this;
    }

    @Override
    public RemoveTransactionHistory set(String parameterName, Object value) {
      return (RemoveTransactionHistory) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateTransactionHistory".
   *
   * This request holds the parameters needed by the transactionhistoryapi server.  After setting any
   * optional parameters, call the {@link UpdateTransactionHistory#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.appspot.bank_1350.transactionhistoryapi.model.TransactionHistory}
   * @return the request
   */
  public UpdateTransactionHistory updateTransactionHistory(com.appspot.bank_1350.transactionhistoryapi.model.TransactionHistory content) throws java.io.IOException {
    UpdateTransactionHistory result = new UpdateTransactionHistory(content);
    initialize(result);
    return result;
  }

  public class UpdateTransactionHistory extends TransactionhistoryapiRequest<com.appspot.bank_1350.transactionhistoryapi.model.TransactionHistory> {

    private static final String REST_PATH = "transactionhistory";

    /**
     * Create a request for the method "updateTransactionHistory".
     *
     * This request holds the parameters needed by the the transactionhistoryapi server.  After
     * setting any optional parameters, call the {@link UpdateTransactionHistory#execute()} method to
     * invoke the remote operation. <p> {@link UpdateTransactionHistory#initialize(com.google.api.clie
     * nt.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.bank_1350.transactionhistoryapi.model.TransactionHistory}
     * @since 1.13
     */
    protected UpdateTransactionHistory(com.appspot.bank_1350.transactionhistoryapi.model.TransactionHistory content) {
      super(Transactionhistoryapi.this, "PUT", REST_PATH, content, com.appspot.bank_1350.transactionhistoryapi.model.TransactionHistory.class);
    }

    @Override
    public UpdateTransactionHistory setAlt(java.lang.String alt) {
      return (UpdateTransactionHistory) super.setAlt(alt);
    }

    @Override
    public UpdateTransactionHistory setFields(java.lang.String fields) {
      return (UpdateTransactionHistory) super.setFields(fields);
    }

    @Override
    public UpdateTransactionHistory setKey(java.lang.String key) {
      return (UpdateTransactionHistory) super.setKey(key);
    }

    @Override
    public UpdateTransactionHistory setOauthToken(java.lang.String oauthToken) {
      return (UpdateTransactionHistory) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateTransactionHistory setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateTransactionHistory) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateTransactionHistory setQuotaUser(java.lang.String quotaUser) {
      return (UpdateTransactionHistory) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateTransactionHistory setUserIp(java.lang.String userIp) {
      return (UpdateTransactionHistory) super.setUserIp(userIp);
    }

    @Override
    public UpdateTransactionHistory set(String parameterName, Object value) {
      return (UpdateTransactionHistory) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Transactionhistoryapi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Transactionhistoryapi}. */
    @Override
    public Transactionhistoryapi build() {
      return new Transactionhistoryapi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link TransactionhistoryapiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setTransactionhistoryapiRequestInitializer(
        TransactionhistoryapiRequestInitializer transactionhistoryapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(transactionhistoryapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
